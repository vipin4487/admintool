{"ast":null,"code":"import _createClass from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nvar ProgressSpinner = /*#__PURE__*/_createClass(function ProgressSpinner() {\n  _classCallCheck(this, ProgressSpinner);\n\n  this.strokeWidth = \"2\";\n  this.fill = \"none\";\n  this.animationDuration = \"2s\";\n});\n\nProgressSpinner.ɵfac = function ProgressSpinner_Factory(t) {\n  return new (t || ProgressSpinner)();\n};\n\nProgressSpinner.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: ProgressSpinner,\n  selectors: [[\"p-progressSpinner\"]],\n  inputs: {\n    strokeWidth: \"strokeWidth\",\n    fill: \"fill\",\n    animationDuration: \"animationDuration\",\n    style: \"style\",\n    styleClass: \"styleClass\"\n  },\n  decls: 3,\n  vars: 6,\n  consts: [[\"role\", \"alert\", \"aria-busy\", \"true\", 1, \"p-progress-spinner\", 3, \"ngStyle\", \"ngClass\"], [\"viewBox\", \"25 25 50 50\", 1, \"p-progress-spinner-svg\"], [\"cx\", \"50\", \"cy\", \"50\", \"r\", \"20\", \"stroke-miterlimit\", \"10\", 1, \"p-progress-spinner-circle\"]],\n  template: function ProgressSpinner_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵnamespaceSVG();\n      ɵngcc0.ɵɵelementStart(1, \"svg\", 1);\n      ɵngcc0.ɵɵelement(2, \"circle\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ctx.styleClass);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleProp(\"animation-duration\", ctx.animationDuration);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵattribute(\"fill\", ctx.fill)(\"stroke-width\", ctx.strokeWidth);\n    }\n  },\n  directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass],\n  styles: [\".p-progress-spinner{display:inline-block;height:100px;margin:0 auto;position:relative;width:100px}.p-progress-spinner:before{content:\\\"\\\";display:block;padding-top:100%}.p-progress-spinner-svg{animation:p-progress-spinner-rotate 2s linear infinite;bottom:0;height:100%;left:0;margin:auto;position:absolute;right:0;top:0;transform-origin:center center;width:100%}.p-progress-spinner-circle{animation:p-progress-spinner-dash 1.5s ease-in-out infinite,p-progress-spinner-color 6s ease-in-out infinite;stroke:#d62d20;stroke-dasharray:89,200;stroke-dashoffset:0;stroke-linecap:round}@keyframes p-progress-spinner-rotate{to{transform:rotate(1turn)}}@keyframes p-progress-spinner-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35px}to{stroke-dasharray:89,200;stroke-dashoffset:-124px}}@keyframes p-progress-spinner-color{0%,to{stroke:#d62d20}40%{stroke:#0057e7}66%{stroke:#008744}80%,90%{stroke:#ffa700}}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nProgressSpinner.propDecorators = {\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  strokeWidth: [{\n    type: Input\n  }],\n  fill: [{\n    type: Input\n  }],\n  animationDuration: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProgressSpinner, [{\n    type: Component,\n    args: [{\n      selector: 'p-progressSpinner',\n      template: \"\\n        <div class=\\\"p-progress-spinner\\\" [ngStyle]=\\\"style\\\" [ngClass]=\\\"styleClass\\\"  role=\\\"alert\\\" aria-busy=\\\"true\\\">\\n            <svg class=\\\"p-progress-spinner-svg\\\" viewBox=\\\"25 25 50 50\\\" [style.animation-duration]=\\\"animationDuration\\\">\\n                <circle class=\\\"p-progress-spinner-circle\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" [attr.fill]=\\\"fill\\\" [attr.stroke-width]=\\\"strokeWidth\\\" stroke-miterlimit=\\\"10\\\"/>\\n            </svg>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-progress-spinner{display:inline-block;height:100px;margin:0 auto;position:relative;width:100px}.p-progress-spinner:before{content:\\\"\\\";display:block;padding-top:100%}.p-progress-spinner-svg{animation:p-progress-spinner-rotate 2s linear infinite;bottom:0;height:100%;left:0;margin:auto;position:absolute;right:0;top:0;transform-origin:center center;width:100%}.p-progress-spinner-circle{animation:p-progress-spinner-dash 1.5s ease-in-out infinite,p-progress-spinner-color 6s ease-in-out infinite;stroke:#d62d20;stroke-dasharray:89,200;stroke-dashoffset:0;stroke-linecap:round}@keyframes p-progress-spinner-rotate{to{transform:rotate(1turn)}}@keyframes p-progress-spinner-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35px}to{stroke-dasharray:89,200;stroke-dashoffset:-124px}}@keyframes p-progress-spinner-color{0%,to{stroke:#d62d20}40%{stroke:#0057e7}66%{stroke:#008744}80%,90%{stroke:#ffa700}}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    strokeWidth: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ProgressSpinnerModule = /*#__PURE__*/_createClass(function ProgressSpinnerModule() {\n  _classCallCheck(this, ProgressSpinnerModule);\n});\n\nProgressSpinnerModule.ɵfac = function ProgressSpinnerModule_Factory(t) {\n  return new (t || ProgressSpinnerModule)();\n};\n\nProgressSpinnerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: ProgressSpinnerModule\n});\nProgressSpinnerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProgressSpinnerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [ProgressSpinner],\n      declarations: [ProgressSpinner]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ProgressSpinnerModule, {\n    declarations: function declarations() {\n      return [ProgressSpinner];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [ProgressSpinner];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ProgressSpinner, ProgressSpinnerModule };","map":{"version":3,"sources":["C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-progressspinner.js"],"names":["Component","ChangeDetectionStrategy","ViewEncapsulation","Input","NgModule","CommonModule","ɵngcc0","ɵngcc1","ProgressSpinner","strokeWidth","fill","animationDuration","ɵfac","ProgressSpinner_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","style","styleClass","decls","vars","consts","template","ProgressSpinner_Template","rf","ctx","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵstyleProp","ɵɵattribute","directives","NgStyle","NgClass","styles","encapsulation","changeDetection","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","None","ProgressSpinnerModule","ProgressSpinnerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nclass ProgressSpinner {\n    constructor() {\n        this.strokeWidth = \"2\";\n        this.fill = \"none\";\n        this.animationDuration = \"2s\";\n    }\n}\nProgressSpinner.ɵfac = function ProgressSpinner_Factory(t) { return new (t || ProgressSpinner)(); };\nProgressSpinner.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ProgressSpinner, selectors: [[\"p-progressSpinner\"]], inputs: { strokeWidth: \"strokeWidth\", fill: \"fill\", animationDuration: \"animationDuration\", style: \"style\", styleClass: \"styleClass\" }, decls: 3, vars: 6, consts: [[\"role\", \"alert\", \"aria-busy\", \"true\", 1, \"p-progress-spinner\", 3, \"ngStyle\", \"ngClass\"], [\"viewBox\", \"25 25 50 50\", 1, \"p-progress-spinner-svg\"], [\"cx\", \"50\", \"cy\", \"50\", \"r\", \"20\", \"stroke-miterlimit\", \"10\", 1, \"p-progress-spinner-circle\"]], template: function ProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(1, \"svg\", 1);\n        ɵngcc0.ɵɵelement(2, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ctx.styleClass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"animation-duration\", ctx.animationDuration);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx.fill)(\"stroke-width\", ctx.strokeWidth);\n    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass], styles: [\".p-progress-spinner{display:inline-block;height:100px;margin:0 auto;position:relative;width:100px}.p-progress-spinner:before{content:\\\"\\\";display:block;padding-top:100%}.p-progress-spinner-svg{animation:p-progress-spinner-rotate 2s linear infinite;bottom:0;height:100%;left:0;margin:auto;position:absolute;right:0;top:0;transform-origin:center center;width:100%}.p-progress-spinner-circle{animation:p-progress-spinner-dash 1.5s ease-in-out infinite,p-progress-spinner-color 6s ease-in-out infinite;stroke:#d62d20;stroke-dasharray:89,200;stroke-dashoffset:0;stroke-linecap:round}@keyframes p-progress-spinner-rotate{to{transform:rotate(1turn)}}@keyframes p-progress-spinner-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35px}to{stroke-dasharray:89,200;stroke-dashoffset:-124px}}@keyframes p-progress-spinner-color{0%,to{stroke:#d62d20}40%{stroke:#0057e7}66%{stroke:#008744}80%,90%{stroke:#ffa700}}\"], encapsulation: 2, changeDetection: 0 });\nProgressSpinner.propDecorators = {\n    style: [{ type: Input }],\n    styleClass: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    fill: [{ type: Input }],\n    animationDuration: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'p-progressSpinner',\n                template: `\n        <div class=\"p-progress-spinner\" [ngStyle]=\"style\" [ngClass]=\"styleClass\"  role=\"alert\" aria-busy=\"true\">\n            <svg class=\"p-progress-spinner-svg\" viewBox=\"25 25 50 50\" [style.animation-duration]=\"animationDuration\">\n                <circle class=\"p-progress-spinner-circle\" cx=\"50\" cy=\"50\" r=\"20\" [attr.fill]=\"fill\" [attr.stroke-width]=\"strokeWidth\" stroke-miterlimit=\"10\"/>\n            </svg>\n        </div>\n    `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".p-progress-spinner{display:inline-block;height:100px;margin:0 auto;position:relative;width:100px}.p-progress-spinner:before{content:\\\"\\\";display:block;padding-top:100%}.p-progress-spinner-svg{animation:p-progress-spinner-rotate 2s linear infinite;bottom:0;height:100%;left:0;margin:auto;position:absolute;right:0;top:0;transform-origin:center center;width:100%}.p-progress-spinner-circle{animation:p-progress-spinner-dash 1.5s ease-in-out infinite,p-progress-spinner-color 6s ease-in-out infinite;stroke:#d62d20;stroke-dasharray:89,200;stroke-dashoffset:0;stroke-linecap:round}@keyframes p-progress-spinner-rotate{to{transform:rotate(1turn)}}@keyframes p-progress-spinner-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35px}to{stroke-dasharray:89,200;stroke-dashoffset:-124px}}@keyframes p-progress-spinner-color{0%,to{stroke:#d62d20}40%{stroke:#0057e7}66%{stroke:#008744}80%,90%{stroke:#ffa700}}\"]\n            }]\n    }], function () { return []; }, { strokeWidth: [{\n            type: Input\n        }], fill: [{\n            type: Input\n        }], animationDuration: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }], styleClass: [{\n            type: Input\n        }] }); })();\nclass ProgressSpinnerModule {\n}\nProgressSpinnerModule.ɵfac = function ProgressSpinnerModule_Factory(t) { return new (t || ProgressSpinnerModule)(); };\nProgressSpinnerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ProgressSpinnerModule });\nProgressSpinnerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [ProgressSpinner],\n                declarations: [ProgressSpinner]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ProgressSpinnerModule, { declarations: function () { return [ProgressSpinner]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ProgressSpinner]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ProgressSpinner, ProgressSpinnerModule };\n\n"]},"metadata":{},"sourceType":"module"}