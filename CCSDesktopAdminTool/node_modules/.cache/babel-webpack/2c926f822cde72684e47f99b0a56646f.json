{"ast":null,"code":"import _classCallCheck from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Directive, ElementRef, NgZone, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport * as Éµngcc0 from '@angular/core';\n\nvar Tooltip = /*#__PURE__*/function () {\n  function Tooltip(el, zone) {\n    _classCallCheck(this, Tooltip);\n\n    this.el = el;\n    this.zone = zone;\n    this.tooltipPosition = 'right';\n    this.tooltipEvent = 'hover';\n    this.appendTo = 'body';\n    this.tooltipZIndex = 'auto';\n    this.escape = true;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(val) {\n      this._disabled = val;\n      this.deactivate();\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this = this;\n\n      this.zone.runOutsideAngular(function () {\n        if (_this.tooltipEvent === 'hover') {\n          _this.mouseEnterListener = _this.onMouseEnter.bind(_this);\n          _this.mouseLeaveListener = _this.onMouseLeave.bind(_this);\n          _this.clickListener = _this.onClick.bind(_this);\n\n          _this.el.nativeElement.addEventListener('mouseenter', _this.mouseEnterListener);\n\n          _this.el.nativeElement.addEventListener('mouseleave', _this.mouseLeaveListener);\n\n          _this.el.nativeElement.addEventListener('click', _this.clickListener);\n        } else if (_this.tooltipEvent === 'focus') {\n          _this.focusListener = _this.onFocus.bind(_this);\n          _this.blurListener = _this.onBlur.bind(_this);\n\n          _this.el.nativeElement.addEventListener('focus', _this.focusListener);\n\n          _this.el.nativeElement.addEventListener('blur', _this.blurListener);\n        }\n      });\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter(e) {\n      if (!this.container && !this.showTimeout) {\n        this.activate();\n      }\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave(e) {\n      this.deactivate();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(e) {\n      this.activate();\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(e) {\n      this.deactivate();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      this.deactivate();\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var _this2 = this;\n\n      this.active = true;\n      this.clearHideTimeout();\n      if (this.showDelay) this.showTimeout = setTimeout(function () {\n        _this2.show();\n      }, this.showDelay);else this.show();\n\n      if (this.life) {\n        var duration = this.showDelay ? this.life + this.showDelay : this.life;\n        this.hideTimeout = setTimeout(function () {\n          _this2.hide();\n        }, duration);\n      }\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      var _this3 = this;\n\n      this.active = false;\n      this.clearShowTimeout();\n\n      if (this.hideDelay) {\n        this.clearHideTimeout(); //life timeout\n\n        this.hideTimeout = setTimeout(function () {\n          _this3.hide();\n        }, this.hideDelay);\n      } else {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this._text;\n    },\n    set: function set(text) {\n      this._text = text;\n\n      if (this.active) {\n        if (this._text) {\n          if (this.container && this.container.offsetParent) {\n            this.updateText();\n            this.align();\n          } else {\n            this.show();\n          }\n        } else {\n          this.hide();\n        }\n      }\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      if (this.container) {\n        this.clearHideTimeout();\n        this.remove();\n      }\n\n      this.container = document.createElement('div');\n      var tooltipArrow = document.createElement('div');\n      tooltipArrow.className = 'p-tooltip-arrow';\n      this.container.appendChild(tooltipArrow);\n      this.tooltipText = document.createElement('div');\n      this.tooltipText.className = 'p-tooltip-text';\n      this.updateText();\n\n      if (this.positionStyle) {\n        this.container.style.position = this.positionStyle;\n      }\n\n      this.container.appendChild(this.tooltipText);\n      if (this.appendTo === 'body') document.body.appendChild(this.container);else if (this.appendTo === 'target') DomHandler.appendChild(this.container, this.el.nativeElement);else DomHandler.appendChild(this.container, this.appendTo);\n      this.container.style.display = 'inline-block';\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.text || this.disabled) {\n        return;\n      }\n\n      this.create();\n      this.align();\n      DomHandler.fadeIn(this.container, 250);\n      if (this.tooltipZIndex === 'auto') this.container.style.zIndex = ++DomHandler.zindex;else this.container.style.zIndex = this.tooltipZIndex;\n      this.bindDocumentResizeListener();\n      this.bindScrollListener();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.remove();\n    }\n  }, {\n    key: \"updateText\",\n    value: function updateText() {\n      if (this.escape) {\n        this.tooltipText.innerHTML = '';\n        this.tooltipText.appendChild(document.createTextNode(this._text));\n      } else {\n        this.tooltipText.innerHTML = this._text;\n      }\n    }\n  }, {\n    key: \"align\",\n    value: function align() {\n      var position = this.tooltipPosition;\n\n      switch (position) {\n        case 'top':\n          this.alignTop();\n\n          if (this.isOutOfBounds()) {\n            this.alignBottom();\n\n            if (this.isOutOfBounds()) {\n              this.alignRight();\n\n              if (this.isOutOfBounds()) {\n                this.alignLeft();\n              }\n            }\n          }\n\n          break;\n\n        case 'bottom':\n          this.alignBottom();\n\n          if (this.isOutOfBounds()) {\n            this.alignTop();\n\n            if (this.isOutOfBounds()) {\n              this.alignRight();\n\n              if (this.isOutOfBounds()) {\n                this.alignLeft();\n              }\n            }\n          }\n\n          break;\n\n        case 'left':\n          this.alignLeft();\n\n          if (this.isOutOfBounds()) {\n            this.alignRight();\n\n            if (this.isOutOfBounds()) {\n              this.alignTop();\n\n              if (this.isOutOfBounds()) {\n                this.alignBottom();\n              }\n            }\n          }\n\n          break;\n\n        case 'right':\n          this.alignRight();\n\n          if (this.isOutOfBounds()) {\n            this.alignLeft();\n\n            if (this.isOutOfBounds()) {\n              this.alignTop();\n\n              if (this.isOutOfBounds()) {\n                this.alignBottom();\n              }\n            }\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"getHostOffset\",\n    value: function getHostOffset() {\n      if (this.appendTo === 'body' || this.appendTo === 'target') {\n        var offset = this.el.nativeElement.getBoundingClientRect();\n        var targetLeft = offset.left + DomHandler.getWindowScrollLeft();\n        var targetTop = offset.top + DomHandler.getWindowScrollTop();\n        return {\n          left: targetLeft,\n          top: targetTop\n        };\n      } else {\n        return {\n          left: 0,\n          top: 0\n        };\n      }\n    }\n  }, {\n    key: \"alignRight\",\n    value: function alignRight() {\n      this.preAlign('right');\n      var hostOffset = this.getHostOffset();\n      var left = hostOffset.left + DomHandler.getOuterWidth(this.el.nativeElement);\n      var top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n      this.container.style.left = left + 'px';\n      this.container.style.top = top + 'px';\n    }\n  }, {\n    key: \"alignLeft\",\n    value: function alignLeft() {\n      this.preAlign('left');\n      var hostOffset = this.getHostOffset();\n      var left = hostOffset.left - DomHandler.getOuterWidth(this.container);\n      var top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n      this.container.style.left = left + 'px';\n      this.container.style.top = top + 'px';\n    }\n  }, {\n    key: \"alignTop\",\n    value: function alignTop() {\n      this.preAlign('top');\n      var hostOffset = this.getHostOffset();\n      var left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n      var top = hostOffset.top - DomHandler.getOuterHeight(this.container);\n      this.container.style.left = left + 'px';\n      this.container.style.top = top + 'px';\n    }\n  }, {\n    key: \"alignBottom\",\n    value: function alignBottom() {\n      this.preAlign('bottom');\n      var hostOffset = this.getHostOffset();\n      var left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n      var top = hostOffset.top + DomHandler.getOuterHeight(this.el.nativeElement);\n      this.container.style.left = left + 'px';\n      this.container.style.top = top + 'px';\n    }\n  }, {\n    key: \"preAlign\",\n    value: function preAlign(position) {\n      this.container.style.left = -999 + 'px';\n      this.container.style.top = -999 + 'px';\n      var defaultClassName = 'p-tooltip p-component p-tooltip-' + position;\n      this.container.className = this.tooltipStyleClass ? defaultClassName + ' ' + this.tooltipStyleClass : defaultClassName;\n    }\n  }, {\n    key: \"isOutOfBounds\",\n    value: function isOutOfBounds() {\n      var offset = this.container.getBoundingClientRect();\n      var targetTop = offset.top;\n      var targetLeft = offset.left;\n      var width = DomHandler.getOuterWidth(this.container);\n      var height = DomHandler.getOuterHeight(this.container);\n      var viewport = DomHandler.getViewport();\n      return targetLeft + width > viewport.width || targetLeft < 0 || targetTop < 0 || targetTop + height > viewport.height;\n    }\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize(e) {\n      this.hide();\n    }\n  }, {\n    key: \"bindDocumentResizeListener\",\n    value: function bindDocumentResizeListener() {\n      var _this4 = this;\n\n      this.zone.runOutsideAngular(function () {\n        _this4.resizeListener = _this4.onWindowResize.bind(_this4);\n        window.addEventListener('resize', _this4.resizeListener);\n      });\n    }\n  }, {\n    key: \"unbindDocumentResizeListener\",\n    value: function unbindDocumentResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this5 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, function () {\n          if (_this5.container) {\n            _this5.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      if (this.tooltipEvent === 'hover') {\n        this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n        this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n        this.el.nativeElement.removeEventListener('click', this.clickListener);\n      } else if (this.tooltipEvent === 'focus') {\n        this.el.nativeElement.removeEventListener('focus', this.focusListener);\n        this.el.nativeElement.removeEventListener('blur', this.blurListener);\n      }\n\n      this.unbindDocumentResizeListener();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.container && this.container.parentElement) {\n        if (this.appendTo === 'body') document.body.removeChild(this.container);else if (this.appendTo === 'target') this.el.nativeElement.removeChild(this.container);else DomHandler.removeChild(this.container, this.appendTo);\n      }\n\n      this.unbindDocumentResizeListener();\n      this.unbindScrollListener();\n      this.clearTimeouts();\n      this.container = null;\n      this.scrollHandler = null;\n    }\n  }, {\n    key: \"clearShowTimeout\",\n    value: function clearShowTimeout() {\n      if (this.showTimeout) {\n        clearTimeout(this.showTimeout);\n        this.showTimeout = null;\n      }\n    }\n  }, {\n    key: \"clearHideTimeout\",\n    value: function clearHideTimeout() {\n      if (this.hideTimeout) {\n        clearTimeout(this.hideTimeout);\n        this.hideTimeout = null;\n      }\n    }\n  }, {\n    key: \"clearTimeouts\",\n    value: function clearTimeouts() {\n      this.clearShowTimeout();\n      this.clearHideTimeout();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unbindEvents();\n      this.remove();\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n    }\n  }]);\n\n  return Tooltip;\n}();\n\nTooltip.Éµfac = function Tooltip_Factory(t) {\n  return new (t || Tooltip)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nTooltip.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: Tooltip,\n  selectors: [[\"\", \"pTooltip\", \"\"]],\n  inputs: {\n    tooltipPosition: \"tooltipPosition\",\n    tooltipEvent: \"tooltipEvent\",\n    appendTo: \"appendTo\",\n    tooltipZIndex: \"tooltipZIndex\",\n    escape: \"escape\",\n    disabled: [\"tooltipDisabled\", \"disabled\"],\n    text: [\"pTooltip\", \"text\"],\n    positionStyle: \"positionStyle\",\n    tooltipStyleClass: \"tooltipStyleClass\",\n    showDelay: \"showDelay\",\n    hideDelay: \"hideDelay\",\n    life: \"life\"\n  }\n});\n\nTooltip.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nTooltip.propDecorators = {\n  tooltipPosition: [{\n    type: Input\n  }],\n  tooltipEvent: [{\n    type: Input\n  }],\n  appendTo: [{\n    type: Input\n  }],\n  positionStyle: [{\n    type: Input\n  }],\n  tooltipStyleClass: [{\n    type: Input\n  }],\n  tooltipZIndex: [{\n    type: Input\n  }],\n  escape: [{\n    type: Input\n  }],\n  showDelay: [{\n    type: Input\n  }],\n  hideDelay: [{\n    type: Input\n  }],\n  life: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input,\n    args: [\"tooltipDisabled\"]\n  }],\n  text: [{\n    type: Input,\n    args: ['pTooltip']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(Tooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[pTooltip]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    tooltipPosition: [{\n      type: Input\n    }],\n    tooltipEvent: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    tooltipZIndex: [{\n      type: Input\n    }],\n    escape: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [\"tooltipDisabled\"]\n    }],\n    text: [{\n      type: Input,\n      args: ['pTooltip']\n    }],\n    positionStyle: [{\n      type: Input\n    }],\n    tooltipStyleClass: [{\n      type: Input\n    }],\n    showDelay: [{\n      type: Input\n    }],\n    hideDelay: [{\n      type: Input\n    }],\n    life: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TooltipModule = /*#__PURE__*/_createClass(function TooltipModule() {\n  _classCallCheck(this, TooltipModule);\n});\n\nTooltipModule.Éµfac = function TooltipModule_Factory(t) {\n  return new (t || TooltipModule)();\n};\n\nTooltipModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n  type: TooltipModule\n});\nTooltipModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Tooltip],\n      declarations: [Tooltip]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(TooltipModule, {\n    declarations: function declarations() {\n      return [Tooltip];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [Tooltip];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Tooltip, TooltipModule };","map":{"version":3,"sources":["C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-tooltip.js"],"names":["Directive","ElementRef","NgZone","Input","NgModule","CommonModule","DomHandler","ConnectedOverlayScrollHandler","Éµngcc0","Tooltip","el","zone","tooltipPosition","tooltipEvent","appendTo","tooltipZIndex","escape","_disabled","val","deactivate","runOutsideAngular","mouseEnterListener","onMouseEnter","bind","mouseLeaveListener","onMouseLeave","clickListener","onClick","nativeElement","addEventListener","focusListener","onFocus","blurListener","onBlur","e","container","showTimeout","activate","active","clearHideTimeout","showDelay","setTimeout","show","life","duration","hideTimeout","hide","clearShowTimeout","hideDelay","_text","text","offsetParent","updateText","align","remove","document","createElement","tooltipArrow","className","appendChild","tooltipText","positionStyle","style","position","body","display","disabled","create","fadeIn","zIndex","zindex","bindDocumentResizeListener","bindScrollListener","innerHTML","createTextNode","alignTop","isOutOfBounds","alignBottom","alignRight","alignLeft","offset","getBoundingClientRect","targetLeft","left","getWindowScrollLeft","targetTop","top","getWindowScrollTop","preAlign","hostOffset","getHostOffset","getOuterWidth","getOuterHeight","defaultClassName","tooltipStyleClass","width","height","viewport","getViewport","resizeListener","onWindowResize","window","removeEventListener","scrollHandler","unbindScrollListener","unbindDocumentResizeListener","parentElement","removeChild","clearTimeouts","clearTimeout","unbindEvents","destroy","Éµfac","Tooltip_Factory","t","ÉµÉµdirectiveInject","Éµdir","ÉµÉµdefineDirective","type","selectors","inputs","ctorParameters","propDecorators","args","ngDevMode","ÉµsetClassMetadata","selector","TooltipModule","TooltipModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","imports","exports","declarations","ngJitMode","ÉµÉµsetNgModuleScope"],"mappings":"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","sourcesContent":["import { Directive, ElementRef, NgZone, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\n\nimport * as Éµngcc0 from '@angular/core';\nclass Tooltip {\n    constructor(el, zone) {\n        this.el = el;\n        this.zone = zone;\n        this.tooltipPosition = 'right';\n        this.tooltipEvent = 'hover';\n        this.appendTo = 'body';\n        this.tooltipZIndex = 'auto';\n        this.escape = true;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(val) {\n        this._disabled = val;\n        this.deactivate();\n    }\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            if (this.tooltipEvent === 'hover') {\n                this.mouseEnterListener = this.onMouseEnter.bind(this);\n                this.mouseLeaveListener = this.onMouseLeave.bind(this);\n                this.clickListener = this.onClick.bind(this);\n                this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\n                this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\n                this.el.nativeElement.addEventListener('click', this.clickListener);\n            }\n            else if (this.tooltipEvent === 'focus') {\n                this.focusListener = this.onFocus.bind(this);\n                this.blurListener = this.onBlur.bind(this);\n                this.el.nativeElement.addEventListener('focus', this.focusListener);\n                this.el.nativeElement.addEventListener('blur', this.blurListener);\n            }\n        });\n    }\n    onMouseEnter(e) {\n        if (!this.container && !this.showTimeout) {\n            this.activate();\n        }\n    }\n    onMouseLeave(e) {\n        this.deactivate();\n    }\n    onFocus(e) {\n        this.activate();\n    }\n    onBlur(e) {\n        this.deactivate();\n    }\n    onClick(e) {\n        this.deactivate();\n    }\n    activate() {\n        this.active = true;\n        this.clearHideTimeout();\n        if (this.showDelay)\n            this.showTimeout = setTimeout(() => { this.show(); }, this.showDelay);\n        else\n            this.show();\n        if (this.life) {\n            let duration = this.showDelay ? this.life + this.showDelay : this.life;\n            this.hideTimeout = setTimeout(() => { this.hide(); }, duration);\n        }\n    }\n    deactivate() {\n        this.active = false;\n        this.clearShowTimeout();\n        if (this.hideDelay) {\n            this.clearHideTimeout(); //life timeout\n            this.hideTimeout = setTimeout(() => { this.hide(); }, this.hideDelay);\n        }\n        else {\n            this.hide();\n        }\n    }\n    get text() {\n        return this._text;\n    }\n    set text(text) {\n        this._text = text;\n        if (this.active) {\n            if (this._text) {\n                if (this.container && this.container.offsetParent) {\n                    this.updateText();\n                    this.align();\n                }\n                else {\n                    this.show();\n                }\n            }\n            else {\n                this.hide();\n            }\n        }\n    }\n    create() {\n        if (this.container) {\n            this.clearHideTimeout();\n            this.remove();\n        }\n        this.container = document.createElement('div');\n        let tooltipArrow = document.createElement('div');\n        tooltipArrow.className = 'p-tooltip-arrow';\n        this.container.appendChild(tooltipArrow);\n        this.tooltipText = document.createElement('div');\n        this.tooltipText.className = 'p-tooltip-text';\n        this.updateText();\n        if (this.positionStyle) {\n            this.container.style.position = this.positionStyle;\n        }\n        this.container.appendChild(this.tooltipText);\n        if (this.appendTo === 'body')\n            document.body.appendChild(this.container);\n        else if (this.appendTo === 'target')\n            DomHandler.appendChild(this.container, this.el.nativeElement);\n        else\n            DomHandler.appendChild(this.container, this.appendTo);\n        this.container.style.display = 'inline-block';\n    }\n    show() {\n        if (!this.text || this.disabled) {\n            return;\n        }\n        this.create();\n        this.align();\n        DomHandler.fadeIn(this.container, 250);\n        if (this.tooltipZIndex === 'auto')\n            this.container.style.zIndex = ++DomHandler.zindex;\n        else\n            this.container.style.zIndex = this.tooltipZIndex;\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n    }\n    hide() {\n        this.remove();\n    }\n    updateText() {\n        if (this.escape) {\n            this.tooltipText.innerHTML = '';\n            this.tooltipText.appendChild(document.createTextNode(this._text));\n        }\n        else {\n            this.tooltipText.innerHTML = this._text;\n        }\n    }\n    align() {\n        let position = this.tooltipPosition;\n        switch (position) {\n            case 'top':\n                this.alignTop();\n                if (this.isOutOfBounds()) {\n                    this.alignBottom();\n                    if (this.isOutOfBounds()) {\n                        this.alignRight();\n                        if (this.isOutOfBounds()) {\n                            this.alignLeft();\n                        }\n                    }\n                }\n                break;\n            case 'bottom':\n                this.alignBottom();\n                if (this.isOutOfBounds()) {\n                    this.alignTop();\n                    if (this.isOutOfBounds()) {\n                        this.alignRight();\n                        if (this.isOutOfBounds()) {\n                            this.alignLeft();\n                        }\n                    }\n                }\n                break;\n            case 'left':\n                this.alignLeft();\n                if (this.isOutOfBounds()) {\n                    this.alignRight();\n                    if (this.isOutOfBounds()) {\n                        this.alignTop();\n                        if (this.isOutOfBounds()) {\n                            this.alignBottom();\n                        }\n                    }\n                }\n                break;\n            case 'right':\n                this.alignRight();\n                if (this.isOutOfBounds()) {\n                    this.alignLeft();\n                    if (this.isOutOfBounds()) {\n                        this.alignTop();\n                        if (this.isOutOfBounds()) {\n                            this.alignBottom();\n                        }\n                    }\n                }\n                break;\n        }\n    }\n    getHostOffset() {\n        if (this.appendTo === 'body' || this.appendTo === 'target') {\n            let offset = this.el.nativeElement.getBoundingClientRect();\n            let targetLeft = offset.left + DomHandler.getWindowScrollLeft();\n            let targetTop = offset.top + DomHandler.getWindowScrollTop();\n            return { left: targetLeft, top: targetTop };\n        }\n        else {\n            return { left: 0, top: 0 };\n        }\n    }\n    alignRight() {\n        this.preAlign('right');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + DomHandler.getOuterWidth(this.el.nativeElement);\n        let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n    alignLeft() {\n        this.preAlign('left');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left - DomHandler.getOuterWidth(this.container);\n        let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n    alignTop() {\n        this.preAlign('top');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n        let top = hostOffset.top - DomHandler.getOuterHeight(this.container);\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n    alignBottom() {\n        this.preAlign('bottom');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n        let top = hostOffset.top + DomHandler.getOuterHeight(this.el.nativeElement);\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n    preAlign(position) {\n        this.container.style.left = -999 + 'px';\n        this.container.style.top = -999 + 'px';\n        let defaultClassName = 'p-tooltip p-component p-tooltip-' + position;\n        this.container.className = this.tooltipStyleClass ? defaultClassName + ' ' + this.tooltipStyleClass : defaultClassName;\n    }\n    isOutOfBounds() {\n        let offset = this.container.getBoundingClientRect();\n        let targetTop = offset.top;\n        let targetLeft = offset.left;\n        let width = DomHandler.getOuterWidth(this.container);\n        let height = DomHandler.getOuterHeight(this.container);\n        let viewport = DomHandler.getViewport();\n        return (targetLeft + width > viewport.width) || (targetLeft < 0) || (targetTop < 0) || (targetTop + height > viewport.height);\n    }\n    onWindowResize(e) {\n        this.hide();\n    }\n    bindDocumentResizeListener() {\n        this.zone.runOutsideAngular(() => {\n            this.resizeListener = this.onWindowResize.bind(this);\n            window.addEventListener('resize', this.resizeListener);\n        });\n    }\n    unbindDocumentResizeListener() {\n        if (this.resizeListener) {\n            window.removeEventListener('resize', this.resizeListener);\n            this.resizeListener = null;\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n                if (this.container) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    unbindEvents() {\n        if (this.tooltipEvent === 'hover') {\n            this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n            this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n            this.el.nativeElement.removeEventListener('click', this.clickListener);\n        }\n        else if (this.tooltipEvent === 'focus') {\n            this.el.nativeElement.removeEventListener('focus', this.focusListener);\n            this.el.nativeElement.removeEventListener('blur', this.blurListener);\n        }\n        this.unbindDocumentResizeListener();\n    }\n    remove() {\n        if (this.container && this.container.parentElement) {\n            if (this.appendTo === 'body')\n                document.body.removeChild(this.container);\n            else if (this.appendTo === 'target')\n                this.el.nativeElement.removeChild(this.container);\n            else\n                DomHandler.removeChild(this.container, this.appendTo);\n        }\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.clearTimeouts();\n        this.container = null;\n        this.scrollHandler = null;\n    }\n    clearShowTimeout() {\n        if (this.showTimeout) {\n            clearTimeout(this.showTimeout);\n            this.showTimeout = null;\n        }\n    }\n    clearHideTimeout() {\n        if (this.hideTimeout) {\n            clearTimeout(this.hideTimeout);\n            this.hideTimeout = null;\n        }\n    }\n    clearTimeouts() {\n        this.clearShowTimeout();\n        this.clearHideTimeout();\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        this.remove();\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n    }\n}\nTooltip.Éµfac = function Tooltip_Factory(t) { return new (t || Tooltip)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nTooltip.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: Tooltip, selectors: [[\"\", \"pTooltip\", \"\"]], inputs: { tooltipPosition: \"tooltipPosition\", tooltipEvent: \"tooltipEvent\", appendTo: \"appendTo\", tooltipZIndex: \"tooltipZIndex\", escape: \"escape\", disabled: [\"tooltipDisabled\", \"disabled\"], text: [\"pTooltip\", \"text\"], positionStyle: \"positionStyle\", tooltipStyleClass: \"tooltipStyleClass\", showDelay: \"showDelay\", hideDelay: \"hideDelay\", life: \"life\" } });\nTooltip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nTooltip.propDecorators = {\n    tooltipPosition: [{ type: Input }],\n    tooltipEvent: [{ type: Input }],\n    appendTo: [{ type: Input }],\n    positionStyle: [{ type: Input }],\n    tooltipStyleClass: [{ type: Input }],\n    tooltipZIndex: [{ type: Input }],\n    escape: [{ type: Input }],\n    showDelay: [{ type: Input }],\n    hideDelay: [{ type: Input }],\n    life: [{ type: Input }],\n    disabled: [{ type: Input, args: [\"tooltipDisabled\",] }],\n    text: [{ type: Input, args: ['pTooltip',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(Tooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[pTooltip]'\n            }]\n    }], function () { return [{ type: Éµngcc0.ElementRef }, { type: Éµngcc0.NgZone }]; }, { tooltipPosition: [{\n            type: Input\n        }], tooltipEvent: [{\n            type: Input\n        }], appendTo: [{\n            type: Input\n        }], tooltipZIndex: [{\n            type: Input\n        }], escape: [{\n            type: Input\n        }], disabled: [{\n            type: Input,\n            args: [\"tooltipDisabled\"]\n        }], text: [{\n            type: Input,\n            args: ['pTooltip']\n        }], positionStyle: [{\n            type: Input\n        }], tooltipStyleClass: [{\n            type: Input\n        }], showDelay: [{\n            type: Input\n        }], hideDelay: [{\n            type: Input\n        }], life: [{\n            type: Input\n        }] }); })();\nclass TooltipModule {\n}\nTooltipModule.Éµfac = function TooltipModule_Factory(t) { return new (t || TooltipModule)(); };\nTooltipModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: TooltipModule });\nTooltipModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(TooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [Tooltip],\n                declarations: [Tooltip]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(TooltipModule, { declarations: function () { return [Tooltip]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Tooltip]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Tooltip, TooltipModule };\n\n"]},"metadata":{},"sourceType":"module"}