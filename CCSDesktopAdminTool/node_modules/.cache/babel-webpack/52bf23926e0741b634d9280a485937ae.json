{"ast":null,"code":"import _classCallCheck from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport var ColdObservable = /*#__PURE__*/function (_Observable) {\n  _inherits(ColdObservable, _Observable);\n\n  var _super = _createSuper(ColdObservable);\n\n  function ColdObservable(messages, scheduler) {\n    var _this;\n\n    _classCallCheck(this, ColdObservable);\n\n    _this = _super.call(this, function (subscriber) {\n      var observable = this;\n      var index = observable.logSubscribedFrame();\n      var subscription = new Subscription();\n      subscription.add(new Subscription(function () {\n        observable.logUnsubscribedFrame(index);\n      }));\n      observable.scheduleMessages(subscriber);\n      return subscription;\n    });\n    _this.messages = messages;\n    _this.subscriptions = [];\n    _this.scheduler = scheduler;\n    return _this;\n  }\n\n  _createClass(ColdObservable, [{\n    key: \"scheduleMessages\",\n    value: function scheduleMessages(subscriber) {\n      var messagesLength = this.messages.length;\n\n      for (var i = 0; i < messagesLength; i++) {\n        var message = this.messages[i];\n        subscriber.add(this.scheduler.schedule(function (_ref) {\n          var message = _ref.message,\n              subscriber = _ref.subscriber;\n          message.notification.observe(subscriber);\n        }, message.frame, {\n          message: message,\n          subscriber: subscriber\n        }));\n      }\n    }\n  }]);\n\n  return ColdObservable;\n}(Observable);\n/*@__PURE__*/\n\napplyMixins(ColdObservable, [SubscriptionLoggable]); //# sourceMappingURL=ColdObservable.js.map","map":null,"metadata":{},"sourceType":"module"}