{"ast":null,"code":"import _classCallCheck from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport var HotObservable = /*#__PURE__*/function (_Subject) {\n  _inherits(HotObservable, _Subject);\n\n  var _super = _createSuper(HotObservable);\n\n  function HotObservable(messages, scheduler) {\n    var _this;\n\n    _classCallCheck(this, HotObservable);\n\n    _this = _super.call(this);\n    _this.messages = messages;\n    _this.subscriptions = [];\n    _this.scheduler = scheduler;\n    return _this;\n  }\n\n  _createClass(HotObservable, [{\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var subject = this;\n      var index = subject.logSubscribedFrame();\n      var subscription = new Subscription();\n      subscription.add(new Subscription(function () {\n        subject.logUnsubscribedFrame(index);\n      }));\n      subscription.add(_get(_getPrototypeOf(HotObservable.prototype), \"_subscribe\", this).call(this, subscriber));\n      return subscription;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      var subject = this;\n      var messagesLength = subject.messages.length;\n\n      for (var i = 0; i < messagesLength; i++) {\n        (function () {\n          var message = subject.messages[i];\n          subject.scheduler.schedule(function () {\n            message.notification.observe(subject);\n          }, message.frame);\n        })();\n      }\n    }\n  }]);\n\n  return HotObservable;\n}(Subject);\napplyMixins(HotObservable, [SubscriptionLoggable]);","map":{"version":3,"sources":["C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/rxjs/_esm2015/internal/testing/HotObservable.js"],"names":["Subject","Subscription","SubscriptionLoggable","applyMixins","HotObservable","messages","scheduler","subscriptions","subscriber","subject","index","logSubscribedFrame","subscription","add","logUnsubscribedFrame","messagesLength","length","i","message","schedule","notification","observe","frame"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,WAAaC,aAAb;AAAA;;AAAA;;AACI,yBAAYC,QAAZ,EAAsBC,SAAtB,EAAiC;AAAA;;AAAA;;AAC7B;AACA,UAAKD,QAAL,GAAgBA,QAAhB;AACA,UAAKE,aAAL,GAAqB,EAArB;AACA,UAAKD,SAAL,GAAiBA,SAAjB;AAJ6B;AAKhC;;AANL;AAAA;AAAA,WAOI,oBAAWE,UAAX,EAAuB;AACnB,UAAMC,OAAO,GAAG,IAAhB;AACA,UAAMC,KAAK,GAAGD,OAAO,CAACE,kBAAR,EAAd;AACA,UAAMC,YAAY,GAAG,IAAIX,YAAJ,EAArB;AACAW,MAAAA,YAAY,CAACC,GAAb,CAAiB,IAAIZ,YAAJ,CAAiB,YAAM;AACpCQ,QAAAA,OAAO,CAACK,oBAAR,CAA6BJ,KAA7B;AACH,OAFgB,CAAjB;AAGAE,MAAAA,YAAY,CAACC,GAAb,+EAAkCL,UAAlC;AACA,aAAOI,YAAP;AACH;AAhBL;AAAA;AAAA,WAiBI,iBAAQ;AACJ,UAAMH,OAAO,GAAG,IAAhB;AACA,UAAMM,cAAc,GAAGN,OAAO,CAACJ,QAAR,CAAiBW,MAAxC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,cAApB,EAAoCE,CAAC,EAArC,EAAyC;AACrC,SAAC,YAAM;AACH,cAAIC,OAAO,GAAGT,OAAO,CAACJ,QAAR,CAAiBY,CAAjB,CAAd;AACAR,UAAAA,OAAO,CAACH,SAAR,CAAkBa,QAAlB,CAA2B,YAAM;AAAED,YAAAA,OAAO,CAACE,YAAR,CAAqBC,OAArB,CAA6BZ,OAA7B;AAAwC,WAA3E,EAA6ES,OAAO,CAACI,KAArF;AACH,SAHD;AAIH;AACJ;AA1BL;;AAAA;AAAA,EAAmCtB,OAAnC;AA4BAG,WAAW,CAACC,aAAD,EAAgB,CAACF,oBAAD,CAAhB,CAAX","sourcesContent":["import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class HotObservable extends Subject {\n    constructor(messages, scheduler) {\n        super();\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    _subscribe(subscriber) {\n        const subject = this;\n        const index = subject.logSubscribedFrame();\n        const subscription = new Subscription();\n        subscription.add(new Subscription(() => {\n            subject.logUnsubscribedFrame(index);\n        }));\n        subscription.add(super._subscribe(subscriber));\n        return subscription;\n    }\n    setup() {\n        const subject = this;\n        const messagesLength = subject.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            (() => {\n                var message = subject.messages[i];\n                subject.scheduler.schedule(() => { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n"]},"metadata":{},"sourceType":"module"}