{"ast":null,"code":"/**\r\n* vkBeautify - javascript plugin to pretty-print or minify text in XML, JSON, CSS and SQL formats.\r\n*\r\n* Copyright (c) 2012 Vadim Kiryukhin\r\n* vkiryukhin @ gmail.com\r\n* http://www.eslinstructor.net/vkbeautify/\r\n*\r\n* Dual licensed under the MIT and GPL licenses:\r\n*   http://www.opensource.org/licenses/mit-license.php\r\n*   http://www.gnu.org/licenses/gpl.html\r\n*\r\n*   Pretty print\r\n*\r\n*        vkbeautify.xml(text [,indent_pattern]);\r\n*        vkbeautify.json(text [,indent_pattern]);\r\n*        vkbeautify.css(text [,indent_pattern]);\r\n*        vkbeautify.sql(text [,indent_pattern]);\r\n*\r\n*        @text - String; text to beatufy;\r\n*        @indent_pattern - Integer | String;\r\n*                Integer:  number of white spaces;\r\n*                String:   character string to visualize indentation ( can also be a set of white spaces )\r\n*   Minify\r\n*\r\n*        vkbeautify.xmlmin(text [,preserve_comments]);\r\n*        vkbeautify.jsonmin(text);\r\n*        vkbeautify.cssmin(text [,preserve_comments]);\r\n*        vkbeautify.sqlmin(text);\r\n*\r\n*        @text - String; text to minify;\r\n*        @preserve_comments - Bool; [optional];\r\n*                Set this flag to true to prevent removing comments from @text ( minxml and mincss functions only. )\r\n*\r\n*   Examples:\r\n*        vkbeautify.xml(text); // pretty print XML\r\n*        vkbeautify.json(text, 4 ); // pretty print JSON\r\n*        vkbeautify.css(text, '. . . .'); // pretty print CSS\r\n*        vkbeautify.sql(text, '----'); // pretty print SQL\r\n*\r\n*        vkbeautify.xmlmin(text, true);// minify XML, preserve comments\r\n*        vkbeautify.jsonmin(text);// minify JSON\r\n*        vkbeautify.cssmin(text);// minify CSS, remove comments ( default )\r\n*        vkbeautify.sqlmin(text);// minify SQL\r\n*\r\n*/\nfunction createShiftArr(step) {\n  var space = '    ';\n\n  if (isNaN(parseInt(step))) {\n    // argument is string\n    space = step;\n  } else {\n    // argument is integer\n    switch (step) {\n      case 1:\n        space = ' ';\n        break;\n\n      case 2:\n        space = '  ';\n        break;\n\n      case 3:\n        space = '   ';\n        break;\n\n      case 4:\n        space = '    ';\n        break;\n\n      case 5:\n        space = '     ';\n        break;\n\n      case 6:\n        space = '      ';\n        break;\n\n      case 7:\n        space = '       ';\n        break;\n\n      case 8:\n        space = '        ';\n        break;\n\n      case 9:\n        space = '         ';\n        break;\n\n      case 10:\n        space = '          ';\n        break;\n\n      case 11:\n        space = '           ';\n        break;\n\n      case 12:\n        space = '            ';\n        break;\n    }\n  }\n\n  var shift = ['\\n']; // array of shifts\n\n  for (var ix = 0; ix < 100; ix++) {\n    shift.push(shift[ix] + space);\n  }\n\n  return shift;\n}\n\nfunction vkbeautify() {\n  this.step = '    '; // 4 spaces\n\n  this.shift = createShiftArr(this.step);\n}\n\n;\n\nvkbeautify.prototype.xml = function (text, step) {\n  var ar = text.replace(/>\\s{0,}</g, \"><\").replace(/</g, \"~::~<\").replace(/\\s*xmlns\\:/g, \"~::~xmlns:\").replace(/\\s*xmlns\\=/g, \"~::~xmlns=\").split('~::~'),\n      len = ar.length,\n      inComment = false,\n      deep = 0,\n      str = '',\n      ix = 0,\n      shift = step ? createShiftArr(step) : this.shift;\n\n  for (ix = 0; ix < len; ix++) {\n    // start comment or <![CDATA[...]]> or <!DOCTYPE //\n    if (ar[ix].search(/<!/) > -1) {\n      str += shift[deep] + ar[ix];\n      inComment = true; // end comment  or <![CDATA[...]]> //\n\n      if (ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1) {\n        inComment = false;\n      }\n    } else // end comment  or <![CDATA[...]]> //\n      if (ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1) {\n        str += ar[ix];\n        inComment = false;\n      } else // <elm></elm> //\n        if (/^<\\w/.exec(ar[ix - 1]) && /^<\\/\\w/.exec(ar[ix]) && /^<[\\w:\\-\\.\\,]+/.exec(ar[ix - 1]) == /^<\\/[\\w:\\-\\.\\,]+/.exec(ar[ix])[0].replace('/', '')) {\n          str += ar[ix];\n          if (!inComment) deep--;\n        } else // <elm> //\n          if (ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) == -1 && ar[ix].search(/\\/>/) == -1) {\n            str = !inComment ? str += shift[deep++] + ar[ix] : str += ar[ix];\n          } else // <elm>...</elm> //\n            if (ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) > -1) {\n              str = !inComment ? str += shift[deep] + ar[ix] : str += ar[ix];\n            } else // </elm> //\n              if (ar[ix].search(/<\\//) > -1) {\n                str = !inComment ? str += shift[--deep] + ar[ix] : str += ar[ix];\n              } else // <elm/> //\n                if (ar[ix].search(/\\/>/) > -1) {\n                  str = !inComment ? str += shift[deep] + ar[ix] : str += ar[ix];\n                } else // <? xml ... ?> //\n                  if (ar[ix].search(/<\\?/) > -1) {\n                    str += shift[deep] + ar[ix];\n                  } else // xmlns //\n                    if (ar[ix].search(/xmlns\\:/) > -1 || ar[ix].search(/xmlns\\=/) > -1) {\n                      str += shift[deep] + ar[ix];\n                    } else {\n                      str += ar[ix];\n                    }\n  }\n\n  return str[0] == '\\n' ? str.slice(1) : str;\n};\n\nvkbeautify.prototype.json = function (text, step) {\n  var step = step ? step : this.step;\n  if (typeof JSON === 'undefined') return text;\n  if (typeof text === \"string\") return JSON.stringify(JSON.parse(text), null, step);\n  if (typeof text === \"object\") return JSON.stringify(text, null, step);\n  return text; // text is not string nor object\n};\n\nvkbeautify.prototype.css = function (text, step) {\n  var ar = text.replace(/\\s{1,}/g, ' ').replace(/\\{/g, \"{~::~\").replace(/\\}/g, \"~::~}~::~\").replace(/\\;/g, \";~::~\").replace(/\\/\\*/g, \"~::~/*\").replace(/\\*\\//g, \"*/~::~\").replace(/~::~\\s{0,}~::~/g, \"~::~\").split('~::~'),\n      len = ar.length,\n      deep = 0,\n      str = '',\n      ix = 0,\n      shift = step ? createShiftArr(step) : this.shift;\n\n  for (ix = 0; ix < len; ix++) {\n    if (/\\{/.exec(ar[ix])) {\n      str += shift[deep++] + ar[ix];\n    } else if (/\\}/.exec(ar[ix])) {\n      str += shift[--deep] + ar[ix];\n    } else if (/\\*\\\\/.exec(ar[ix])) {\n      str += shift[deep] + ar[ix];\n    } else {\n      str += shift[deep] + ar[ix];\n    }\n  }\n\n  return str.replace(/^\\n{1,}/, '');\n}; //----------------------------------------------------------------------------\n\n\nfunction isSubquery(str, parenthesisLevel) {\n  return parenthesisLevel - (str.replace(/\\(/g, '').length - str.replace(/\\)/g, '').length);\n}\n\nfunction split_sql(str, tab) {\n  return str.replace(/\\s{1,}/g, \" \").replace(/ AND /ig, \"~::~\" + tab + tab + \"AND \").replace(/ BETWEEN /ig, \"~::~\" + tab + \"BETWEEN \").replace(/ CASE /ig, \"~::~\" + tab + \"CASE \").replace(/ ELSE /ig, \"~::~\" + tab + \"ELSE \").replace(/ END /ig, \"~::~\" + tab + \"END \").replace(/ FROM /ig, \"~::~FROM \").replace(/ GROUP\\s{1,}BY/ig, \"~::~GROUP BY \").replace(/ HAVING /ig, \"~::~HAVING \") //.replace(/ SET /ig,\" SET~::~\")\n  .replace(/ IN /ig, \" IN \").replace(/ JOIN /ig, \"~::~JOIN \").replace(/ CROSS~::~{1,}JOIN /ig, \"~::~CROSS JOIN \").replace(/ INNER~::~{1,}JOIN /ig, \"~::~INNER JOIN \").replace(/ LEFT~::~{1,}JOIN /ig, \"~::~LEFT JOIN \").replace(/ RIGHT~::~{1,}JOIN /ig, \"~::~RIGHT JOIN \").replace(/ ON /ig, \"~::~\" + tab + \"ON \").replace(/ OR /ig, \"~::~\" + tab + tab + \"OR \").replace(/ ORDER\\s{1,}BY/ig, \"~::~ORDER BY \").replace(/ OVER /ig, \"~::~\" + tab + \"OVER \").replace(/\\(\\s{0,}SELECT /ig, \"~::~(SELECT \").replace(/\\)\\s{0,}SELECT /ig, \")~::~SELECT \").replace(/ THEN /ig, \" THEN~::~\" + tab + \"\").replace(/ UNION /ig, \"~::~UNION~::~\").replace(/ USING /ig, \"~::~USING \").replace(/ WHEN /ig, \"~::~\" + tab + \"WHEN \").replace(/ WHERE /ig, \"~::~WHERE \").replace(/ WITH /ig, \"~::~WITH \") //.replace(/\\,\\s{0,}\\(/ig,\",~::~( \")\n  //.replace(/\\,/ig,\",~::~\"+tab+tab+\"\")\n  .replace(/ ALL /ig, \" ALL \").replace(/ AS /ig, \" AS \").replace(/ ASC /ig, \" ASC \").replace(/ DESC /ig, \" DESC \").replace(/ DISTINCT /ig, \" DISTINCT \").replace(/ EXISTS /ig, \" EXISTS \").replace(/ NOT /ig, \" NOT \").replace(/ NULL /ig, \" NULL \").replace(/ LIKE /ig, \" LIKE \").replace(/\\s{0,}SELECT /ig, \"SELECT \").replace(/\\s{0,}UPDATE /ig, \"UPDATE \").replace(/ SET /ig, \" SET \").replace(/~::~{1,}/g, \"~::~\").split('~::~');\n}\n\nvkbeautify.prototype.sql = function (text, step) {\n  var ar_by_quote = text.replace(/\\s{1,}/g, \" \").replace(/\\'/ig, \"~::~\\'\").split('~::~'),\n      len = ar_by_quote.length,\n      ar = [],\n      deep = 0,\n      tab = this.step,\n      //+this.step,\n  inComment = true,\n      inQuote = false,\n      parenthesisLevel = 0,\n      str = '',\n      ix = 0,\n      shift = step ? createShiftArr(step) : this.shift;\n  ;\n\n  for (ix = 0; ix < len; ix++) {\n    if (ix % 2) {\n      ar = ar.concat(ar_by_quote[ix]);\n    } else {\n      ar = ar.concat(split_sql(ar_by_quote[ix], tab));\n    }\n  }\n\n  len = ar.length;\n\n  for (ix = 0; ix < len; ix++) {\n    parenthesisLevel = isSubquery(ar[ix], parenthesisLevel);\n\n    if (/\\s{0,}\\s{0,}SELECT\\s{0,}/.exec(ar[ix])) {\n      ar[ix] = ar[ix].replace(/\\,/g, \",\\n\" + tab + tab + \"\");\n    }\n\n    if (/\\s{0,}\\s{0,}SET\\s{0,}/.exec(ar[ix])) {\n      ar[ix] = ar[ix].replace(/\\,/g, \",\\n\" + tab + tab + \"\");\n    }\n\n    if (/\\s{0,}\\(\\s{0,}SELECT\\s{0,}/.exec(ar[ix])) {\n      deep++;\n      str += shift[deep] + ar[ix];\n    } else if (/\\'/.exec(ar[ix])) {\n      if (parenthesisLevel < 1 && deep) {\n        deep--;\n      }\n\n      str += ar[ix];\n    } else {\n      str += shift[deep] + ar[ix];\n\n      if (parenthesisLevel < 1 && deep) {\n        deep--;\n      }\n    }\n\n    var junk = 0;\n  }\n\n  str = str.replace(/^\\n{1,}/, '').replace(/\\n{1,}/g, \"\\n\");\n  return str;\n};\n\nvkbeautify.prototype.xmlmin = function (text, preserveComments) {\n  var str = preserveComments ? text : text.replace(/\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>/g, \"\").replace(/[ \\r\\n\\t]{1,}xmlns/g, ' xmlns');\n  return str.replace(/>\\s{0,}</g, \"><\");\n};\n\nvkbeautify.prototype.jsonmin = function (text) {\n  if (typeof JSON === 'undefined') return text;\n  return JSON.stringify(JSON.parse(text), null, 0);\n};\n\nvkbeautify.prototype.cssmin = function (text, preserveComments) {\n  var str = preserveComments ? text : text.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\//g, \"\");\n  return str.replace(/\\s{1,}/g, ' ').replace(/\\{\\s{1,}/g, \"{\").replace(/\\}\\s{1,}/g, \"}\").replace(/\\;\\s{1,}/g, \";\").replace(/\\/\\*\\s{1,}/g, \"/*\").replace(/\\*\\/\\s{1,}/g, \"*/\");\n};\n\nvkbeautify.prototype.sqlmin = function (text) {\n  return text.replace(/\\s{1,}/g, \" \").replace(/\\s{1,}\\(/, \"(\").replace(/\\s{1,}\\)/, \")\");\n};\n\nmodule.exports = new vkbeautify();","map":{"version":3,"sources":["C:/Work/admintool/admintool/CCSDesktopAdminTool/node_modules/vkbeautify/index.js"],"names":["createShiftArr","step","space","isNaN","parseInt","shift","ix","push","vkbeautify","prototype","xml","text","ar","replace","split","len","length","inComment","deep","str","search","exec","slice","json","JSON","stringify","parse","css","isSubquery","parenthesisLevel","split_sql","tab","sql","ar_by_quote","inQuote","concat","junk","xmlmin","preserveComments","jsonmin","cssmin","sqlmin","module","exports"],"mappings":"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","sourcesContent":["/**\r\n* vkBeautify - javascript plugin to pretty-print or minify text in XML, JSON, CSS and SQL formats.\r\n*\r\n* Copyright (c) 2012 Vadim Kiryukhin\r\n* vkiryukhin @ gmail.com\r\n* http://www.eslinstructor.net/vkbeautify/\r\n*\r\n* Dual licensed under the MIT and GPL licenses:\r\n*   http://www.opensource.org/licenses/mit-license.php\r\n*   http://www.gnu.org/licenses/gpl.html\r\n*\r\n*   Pretty print\r\n*\r\n*        vkbeautify.xml(text [,indent_pattern]);\r\n*        vkbeautify.json(text [,indent_pattern]);\r\n*        vkbeautify.css(text [,indent_pattern]);\r\n*        vkbeautify.sql(text [,indent_pattern]);\r\n*\r\n*        @text - String; text to beatufy;\r\n*        @indent_pattern - Integer | String;\r\n*                Integer:  number of white spaces;\r\n*                String:   character string to visualize indentation ( can also be a set of white spaces )\r\n*   Minify\r\n*\r\n*        vkbeautify.xmlmin(text [,preserve_comments]);\r\n*        vkbeautify.jsonmin(text);\r\n*        vkbeautify.cssmin(text [,preserve_comments]);\r\n*        vkbeautify.sqlmin(text);\r\n*\r\n*        @text - String; text to minify;\r\n*        @preserve_comments - Bool; [optional];\r\n*                Set this flag to true to prevent removing comments from @text ( minxml and mincss functions only. )\r\n*\r\n*   Examples:\r\n*        vkbeautify.xml(text); // pretty print XML\r\n*        vkbeautify.json(text, 4 ); // pretty print JSON\r\n*        vkbeautify.css(text, '. . . .'); // pretty print CSS\r\n*        vkbeautify.sql(text, '----'); // pretty print SQL\r\n*\r\n*        vkbeautify.xmlmin(text, true);// minify XML, preserve comments\r\n*        vkbeautify.jsonmin(text);// minify JSON\r\n*        vkbeautify.cssmin(text);// minify CSS, remove comments ( default )\r\n*        vkbeautify.sqlmin(text);// minify SQL\r\n*\r\n*/\r\nfunction createShiftArr(step) {\r\n\r\n\tvar space = '    ';\r\n\r\n\tif ( isNaN(parseInt(step)) ) {  // argument is string\r\n\t\tspace = step;\r\n\t} else { // argument is integer\r\n\t\tswitch(step) {\r\n\t\t\tcase 1: space = ' '; break;\r\n\t\t\tcase 2: space = '  '; break;\r\n\t\t\tcase 3: space = '   '; break;\r\n\t\t\tcase 4: space = '    '; break;\r\n\t\t\tcase 5: space = '     '; break;\r\n\t\t\tcase 6: space = '      '; break;\r\n\t\t\tcase 7: space = '       '; break;\r\n\t\t\tcase 8: space = '        '; break;\r\n\t\t\tcase 9: space = '         '; break;\r\n\t\t\tcase 10: space = '          '; break;\r\n\t\t\tcase 11: space = '           '; break;\r\n\t\t\tcase 12: space = '            '; break;\r\n\t\t}\r\n\t}\r\n\r\n\tvar shift = ['\\n']; // array of shifts\r\n\tfor(var ix=0;ix<100;ix++) {\r\n\t\tshift.push(shift[ix]+space);\r\n\t}\r\n\treturn shift;\r\n}\r\n\r\nfunction vkbeautify(){\r\n\tthis.step = '    '; // 4 spaces\r\n\tthis.shift = createShiftArr(this.step);\r\n};\r\n\r\nvkbeautify.prototype.xml = function(text,step) {\r\n\r\n\tvar ar = text.replace(/>\\s{0,}</g,\"><\")\r\n\t\t\t\t .replace(/</g,\"~::~<\")\r\n\t\t\t\t .replace(/\\s*xmlns\\:/g,\"~::~xmlns:\")\r\n\t\t\t\t .replace(/\\s*xmlns\\=/g,\"~::~xmlns=\")\r\n\t\t\t\t .split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tinComment = false,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t// start comment or <![CDATA[...]]> or <!DOCTYPE //\r\n\t\t\tif(ar[ix].search(/<!/) > -1) {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tinComment = true;\r\n\t\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1 ) {\r\n\t\t\t\t\tinComment = false;\r\n\t\t\t\t}\r\n\t\t\t} else\r\n\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1) {\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tinComment = false;\r\n\t\t\t} else\r\n\t\t\t// <elm></elm> //\r\n\t\t\tif( /^<\\w/.exec(ar[ix-1]) && /^<\\/\\w/.exec(ar[ix]) &&\r\n\t\t\t\t/^<[\\w:\\-\\.\\,]+/.exec(ar[ix-1]) == /^<\\/[\\w:\\-\\.\\,]+/.exec(ar[ix])[0].replace('/','')) {\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tif(!inComment) deep--;\r\n\t\t\t} else\r\n\t\t\t // <elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) == -1 && ar[ix].search(/\\/>/) == -1 ) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep++]+ar[ix] : str += ar[ix];\r\n\t\t\t} else\r\n\t\t\t // <elm>...</elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) > -1) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else\r\n\t\t\t// </elm> //\r\n\t\t\tif(ar[ix].search(/<\\//) > -1) {\r\n\t\t\t\tstr = !inComment ? str += shift[--deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else\r\n\t\t\t// <elm/> //\r\n\t\t\tif(ar[ix].search(/\\/>/) > -1 ) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else\r\n\t\t\t// <? xml ... ?> //\r\n\t\t\tif(ar[ix].search(/<\\?/) > -1) {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else\r\n\t\t\t// xmlns //\r\n\t\t\tif( ar[ix].search(/xmlns\\:/) > -1  || ar[ix].search(/xmlns\\=/) > -1) {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\treturn  (str[0] == '\\n') ? str.slice(1) : str;\r\n}\r\n\r\nvkbeautify.prototype.json = function(text,step) {\r\n\r\n\tvar step = step ? step : this.step;\r\n\r\n\tif (typeof JSON === 'undefined' ) return text;\r\n\r\n\tif ( typeof text === \"string\" ) return JSON.stringify(JSON.parse(text), null, step);\r\n\tif ( typeof text === \"object\" ) return JSON.stringify(text, null, step);\r\n\r\n\treturn text; // text is not string nor object\r\n}\r\n\r\nvkbeautify.prototype.css = function(text, step) {\r\n\r\n\tvar ar = text.replace(/\\s{1,}/g,' ')\r\n\t\t\t\t.replace(/\\{/g,\"{~::~\")\r\n\t\t\t\t.replace(/\\}/g,\"~::~}~::~\")\r\n\t\t\t\t.replace(/\\;/g,\";~::~\")\r\n\t\t\t\t.replace(/\\/\\*/g,\"~::~/*\")\r\n\t\t\t\t.replace(/\\*\\//g,\"*/~::~\")\r\n\t\t\t\t.replace(/~::~\\s{0,}~::~/g,\"~::~\")\r\n\t\t\t\t.split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\r\n\t\t\tif( /\\{/.exec(ar[ix]))  {\r\n\t\t\t\tstr += shift[deep++]+ar[ix];\r\n\t\t\t} else\r\n\t\t\tif( /\\}/.exec(ar[ix]))  {\r\n\t\t\t\tstr += shift[--deep]+ar[ix];\r\n\t\t\t} else\r\n\t\t\tif( /\\*\\\\/.exec(ar[ix]))  {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str.replace(/^\\n{1,}/,'');\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nfunction isSubquery(str, parenthesisLevel) {\r\n\treturn  parenthesisLevel - (str.replace(/\\(/g,'').length - str.replace(/\\)/g,'').length )\r\n}\r\n\r\nfunction split_sql(str, tab) {\r\n\r\n\treturn str.replace(/\\s{1,}/g,\" \")\r\n\r\n\t\t\t\t.replace(/ AND /ig,\"~::~\"+tab+tab+\"AND \")\r\n\t\t\t\t.replace(/ BETWEEN /ig,\"~::~\"+tab+\"BETWEEN \")\r\n\t\t\t\t.replace(/ CASE /ig,\"~::~\"+tab+\"CASE \")\r\n\t\t\t\t.replace(/ ELSE /ig,\"~::~\"+tab+\"ELSE \")\r\n\t\t\t\t.replace(/ END /ig,\"~::~\"+tab+\"END \")\r\n\t\t\t\t.replace(/ FROM /ig,\"~::~FROM \")\r\n\t\t\t\t.replace(/ GROUP\\s{1,}BY/ig,\"~::~GROUP BY \")\r\n\t\t\t\t.replace(/ HAVING /ig,\"~::~HAVING \")\r\n\t\t\t\t//.replace(/ SET /ig,\" SET~::~\")\r\n\t\t\t\t.replace(/ IN /ig,\" IN \")\r\n\r\n\t\t\t\t.replace(/ JOIN /ig,\"~::~JOIN \")\r\n\t\t\t\t.replace(/ CROSS~::~{1,}JOIN /ig,\"~::~CROSS JOIN \")\r\n\t\t\t\t.replace(/ INNER~::~{1,}JOIN /ig,\"~::~INNER JOIN \")\r\n\t\t\t\t.replace(/ LEFT~::~{1,}JOIN /ig,\"~::~LEFT JOIN \")\r\n\t\t\t\t.replace(/ RIGHT~::~{1,}JOIN /ig,\"~::~RIGHT JOIN \")\r\n\r\n\t\t\t\t.replace(/ ON /ig,\"~::~\"+tab+\"ON \")\r\n\t\t\t\t.replace(/ OR /ig,\"~::~\"+tab+tab+\"OR \")\r\n\t\t\t\t.replace(/ ORDER\\s{1,}BY/ig,\"~::~ORDER BY \")\r\n\t\t\t\t.replace(/ OVER /ig,\"~::~\"+tab+\"OVER \")\r\n\r\n\t\t\t\t.replace(/\\(\\s{0,}SELECT /ig,\"~::~(SELECT \")\r\n\t\t\t\t.replace(/\\)\\s{0,}SELECT /ig,\")~::~SELECT \")\r\n\r\n\t\t\t\t.replace(/ THEN /ig,\" THEN~::~\"+tab+\"\")\r\n\t\t\t\t.replace(/ UNION /ig,\"~::~UNION~::~\")\r\n\t\t\t\t.replace(/ USING /ig,\"~::~USING \")\r\n\t\t\t\t.replace(/ WHEN /ig,\"~::~\"+tab+\"WHEN \")\r\n\t\t\t\t.replace(/ WHERE /ig,\"~::~WHERE \")\r\n\t\t\t\t.replace(/ WITH /ig,\"~::~WITH \")\r\n\r\n\t\t\t\t//.replace(/\\,\\s{0,}\\(/ig,\",~::~( \")\r\n\t\t\t\t//.replace(/\\,/ig,\",~::~\"+tab+tab+\"\")\r\n\r\n\t\t\t\t.replace(/ ALL /ig,\" ALL \")\r\n\t\t\t\t.replace(/ AS /ig,\" AS \")\r\n\t\t\t\t.replace(/ ASC /ig,\" ASC \")\r\n\t\t\t\t.replace(/ DESC /ig,\" DESC \")\r\n\t\t\t\t.replace(/ DISTINCT /ig,\" DISTINCT \")\r\n\t\t\t\t.replace(/ EXISTS /ig,\" EXISTS \")\r\n\t\t\t\t.replace(/ NOT /ig,\" NOT \")\r\n\t\t\t\t.replace(/ NULL /ig,\" NULL \")\r\n\t\t\t\t.replace(/ LIKE /ig,\" LIKE \")\r\n\t\t\t\t.replace(/\\s{0,}SELECT /ig,\"SELECT \")\r\n\t\t\t\t.replace(/\\s{0,}UPDATE /ig,\"UPDATE \")\r\n\t\t\t\t.replace(/ SET /ig,\" SET \")\r\n\r\n\t\t\t\t.replace(/~::~{1,}/g,\"~::~\")\r\n\t\t\t\t.split('~::~');\r\n}\r\n\r\nvkbeautify.prototype.sql = function(text,step) {\r\n\r\n\tvar ar_by_quote = text.replace(/\\s{1,}/g,\" \")\r\n\t\t\t\t\t\t\t.replace(/\\'/ig,\"~::~\\'\")\r\n\t\t\t\t\t\t\t.split('~::~'),\r\n\t\tlen = ar_by_quote.length,\r\n\t\tar = [],\r\n\t\tdeep = 0,\r\n\t\ttab = this.step,//+this.step,\r\n\t\tinComment = true,\r\n\t\tinQuote = false,\r\n\t\tparenthesisLevel = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\tif(ix%2) {\r\n\t\t\t\tar = ar.concat(ar_by_quote[ix]);\r\n\t\t\t} else {\r\n\t\t\t\tar = ar.concat(split_sql(ar_by_quote[ix], tab) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlen = ar.length;\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\r\n\t\t\tparenthesisLevel = isSubquery(ar[ix], parenthesisLevel);\r\n\r\n\t\t\tif( /\\s{0,}\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  {\r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t}\r\n\r\n\t\t\tif( /\\s{0,}\\s{0,}SET\\s{0,}/.exec(ar[ix]))  {\r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t}\r\n\r\n\t\t\tif( /\\s{0,}\\(\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  {\r\n\t\t\t\tdeep++;\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else\r\n\t\t\tif( /\\'/.exec(ar[ix]) )  {\r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t\telse  {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar junk = 0;\r\n\t\t}\r\n\r\n\t\tstr = str.replace(/^\\n{1,}/,'').replace(/\\n{1,}/g,\"\\n\");\r\n\t\treturn str;\r\n}\r\n\r\n\r\nvkbeautify.prototype.xmlmin = function(text, preserveComments) {\r\n\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>/g,\"\")\r\n\t\t\t\t\t\t\t\t\t .replace(/[ \\r\\n\\t]{1,}xmlns/g, ' xmlns');\r\n\treturn  str.replace(/>\\s{0,}</g,\"><\");\r\n}\r\n\r\nvkbeautify.prototype.jsonmin = function(text) {\r\n\r\n\tif (typeof JSON === 'undefined' ) return text;\r\n\r\n\treturn JSON.stringify(JSON.parse(text), null, 0);\r\n\r\n}\r\n\r\nvkbeautify.prototype.cssmin = function(text, preserveComments) {\r\n\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\//g,\"\") ;\r\n\r\n\treturn str.replace(/\\s{1,}/g,' ')\r\n\t\t\t  .replace(/\\{\\s{1,}/g,\"{\")\r\n\t\t\t  .replace(/\\}\\s{1,}/g,\"}\")\r\n\t\t\t  .replace(/\\;\\s{1,}/g,\";\")\r\n\t\t\t  .replace(/\\/\\*\\s{1,}/g,\"/*\")\r\n\t\t\t  .replace(/\\*\\/\\s{1,}/g,\"*/\");\r\n}\r\n\r\nvkbeautify.prototype.sqlmin = function(text) {\r\n\treturn text.replace(/\\s{1,}/g,\" \").replace(/\\s{1,}\\(/,\"(\").replace(/\\s{1,}\\)/,\")\");\r\n}\r\n\r\nmodule.exports = new vkbeautify();\r\n"]},"metadata":{},"sourceType":"script"}